let Canvas = document.getElementById("canvas");
const ctx = Canvas.getContext("2d");
const dt = 0.001;
Canvas.width = 9*window.innerWidth/10;
let particle = [];
Mouse = { x:0, y:0 }
function note(e){
    Mouse.x = e.offsetX;
    Mouse.y = e.offsetY;
}
clear = () => { ctx.clearRect(0, 0, Canvas.clientWidth, Canvas.height); }
random = (high, low = 0) => Math.floor(high*Math.random()+low)-low;
rls = () => {
    let u = random(3);
    switch(u){
        case 0 : return "R";
        case 1 : return "G";
        case 2 : return "B";
    }
}
arw = (X0, Y0, dX, dY, col = "black") => {
    ctx.beginPath();
    let r = Math.sqrt(dX*dX + dY*dY), R = 30;
    dX*= R/r; dY*= R/r;
    ctx.strokeStyle = col; ctx.moveTo(X0, Y0); ctx.lineTo(X0+dX, Y0+dY); ctx.stroke();
}

circle = (x, y, r=10, str = null, fill = null) => {
    ctx.beginPath(); ctx.arc(x, y, r, 0, 2 * Math.PI);
    if(typeof fill == "string"){ ctx.fillStyle = fill; ctx.fill() }
    if(typeof str == "string"){ ctx.strokeStyle = str; ctx.stroke() }
}

d = (a, b, arr) => { return Math.sqrt(Math.pow(arr[b].x-arr[a].x, 2)+Math.pow(arr[b].y-arr[a].y, 2)).toFixed(2) }
Force = (r) => {
    let M=30, R=15, a=10;
    if(r<=R) return (-1/r+1/R).toFixed(2);
    else if(r<=R+2*M) return (-a*Math.abs(r-M-R)/M+a).toFixed(2);
    else return 0;
}

function Particle(x, y, type = "R"){
    this.x = x; this.y = y; this.type = type;

    switch(this.type){
        case "R" : this.m = 1;
        case "G" : this.m = -4;
        case "B" : this.m = 10;
    }

    this.v = [0, 0];
    this.F = [0, 0];

    this.draw = () => {
        if(this.type == "R") circle(this.x, this.y, 7, null, "yellow");
        else if(this.type == "G") circle(this.x, this.y, 7, null, "yellow");
        else if(this.type == "B") circle(this.x, this.y, 7, null, "yellow");
    }
}

function addp(){ particle.push(new Particle(Mouse.x, Mouse.y, rls())); clear(); particle.forEach(item => item.draw()) }

many=()=>{
    for (let k = 0; k < 250; k++) {
        particle.push(new Particle(random(Canvas.width/2)+Canvas.width/4, random(Canvas.height/2)+Canvas.height/4, rls())); clear(); particle.forEach(item => item.draw())
    }
}